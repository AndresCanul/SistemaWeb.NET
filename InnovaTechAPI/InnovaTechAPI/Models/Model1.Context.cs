//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InnovaTechAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InnovaTechDBEntities : DbContext
    {
        public InnovaTechDBEntities()
            : base("name=InnovaTechDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int ActualizarCategoria(Nullable<long> idCategoria, string nombreCategoria, string descripcionCategoria, string iconoCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(long));
    
            var nombreCategoriaParameter = nombreCategoria != null ?
                new ObjectParameter("NombreCategoria", nombreCategoria) :
                new ObjectParameter("NombreCategoria", typeof(string));
    
            var descripcionCategoriaParameter = descripcionCategoria != null ?
                new ObjectParameter("DescripcionCategoria", descripcionCategoria) :
                new ObjectParameter("DescripcionCategoria", typeof(string));
    
            var iconoCategoriaParameter = iconoCategoria != null ?
                new ObjectParameter("IconoCategoria", iconoCategoria) :
                new ObjectParameter("IconoCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCategoria", idCategoriaParameter, nombreCategoriaParameter, descripcionCategoriaParameter, iconoCategoriaParameter);
        }
    
        public virtual int ActualizarImagenProducto(Nullable<long> idProducto, string imagenProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(long));
    
            var imagenProductoParameter = imagenProducto != null ?
                new ObjectParameter("ImagenProducto", imagenProducto) :
                new ObjectParameter("ImagenProducto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarImagenProducto", idProductoParameter, imagenProductoParameter);
        }
    
        public virtual int ActualizarImagenRol(Nullable<long> idRol, string imagenRol)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(long));
    
            var imagenRolParameter = imagenRol != null ?
                new ObjectParameter("ImagenRol", imagenRol) :
                new ObjectParameter("ImagenRol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarImagenRol", idRolParameter, imagenRolParameter);
        }
    
        public virtual int ActualizarImagenUsuario(Nullable<long> idUsuario, string imagenUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            var imagenUsuarioParameter = imagenUsuario != null ?
                new ObjectParameter("ImagenUsuario", imagenUsuario) :
                new ObjectParameter("ImagenUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarImagenUsuario", idUsuarioParameter, imagenUsuarioParameter);
        }
    
        public virtual int ActualizarInventario(Nullable<long> idInventario, Nullable<bool> incrementar)
        {
            var idInventarioParameter = idInventario.HasValue ?
                new ObjectParameter("IdInventario", idInventario) :
                new ObjectParameter("IdInventario", typeof(long));
    
            var incrementarParameter = incrementar.HasValue ?
                new ObjectParameter("Incrementar", incrementar) :
                new ObjectParameter("Incrementar", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarInventario", idInventarioParameter, incrementarParameter);
        }
    
        public virtual int ActualizarPerfil(Nullable<long> idUsuario, Nullable<long> idUbicacion, string nombreUsuario, string apellidoUsuario, Nullable<int> edad, string correo)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(long));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("NombreUsuario", nombreUsuario) :
                new ObjectParameter("NombreUsuario", typeof(string));
    
            var apellidoUsuarioParameter = apellidoUsuario != null ?
                new ObjectParameter("ApellidoUsuario", apellidoUsuario) :
                new ObjectParameter("ApellidoUsuario", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPerfil", idUsuarioParameter, idUbicacionParameter, nombreUsuarioParameter, apellidoUsuarioParameter, edadParameter, correoParameter);
        }
    
        public virtual int ActualizarProducto(Nullable<long> idProducto, Nullable<long> idCategoria, string nombreProducto, Nullable<decimal> precioUnitario, string color, Nullable<int> stock)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(long));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(long));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var precioUnitarioParameter = precioUnitario.HasValue ?
                new ObjectParameter("PrecioUnitario", precioUnitario) :
                new ObjectParameter("PrecioUnitario", typeof(decimal));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProducto", idProductoParameter, idCategoriaParameter, nombreProductoParameter, precioUnitarioParameter, colorParameter, stockParameter);
        }
    
        public virtual int ActualizarRol(Nullable<long> idRol, string nombreRol, string descripcionRol)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(long));
    
            var nombreRolParameter = nombreRol != null ?
                new ObjectParameter("NombreRol", nombreRol) :
                new ObjectParameter("NombreRol", typeof(string));
    
            var descripcionRolParameter = descripcionRol != null ?
                new ObjectParameter("DescripcionRol", descripcionRol) :
                new ObjectParameter("DescripcionRol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarRol", idRolParameter, nombreRolParameter, descripcionRolParameter);
        }
    
        public virtual int ActualizarUsuario(Nullable<long> idUsuario, Nullable<long> idUbicacion, Nullable<long> idRol, string nombreUsuario, string apellidoUsuario, Nullable<int> edad, string correo)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(long));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(long));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("NombreUsuario", nombreUsuario) :
                new ObjectParameter("NombreUsuario", typeof(string));
    
            var apellidoUsuarioParameter = apellidoUsuario != null ?
                new ObjectParameter("ApellidoUsuario", apellidoUsuario) :
                new ObjectParameter("ApellidoUsuario", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarUsuario", idUsuarioParameter, idUbicacionParameter, idRolParameter, nombreUsuarioParameter, apellidoUsuarioParameter, edadParameter, correoParameter);
        }
    
        public virtual int AgregarFavorito(Nullable<long> idUsuario, Nullable<long> idProducto)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarFavorito", idUsuarioParameter, idProductoParameter);
        }
    
        public virtual int CambiarClave(Nullable<long> idUsuario, string claveAnterior, string claveNueva)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            var claveAnteriorParameter = claveAnterior != null ?
                new ObjectParameter("ClaveAnterior", claveAnterior) :
                new ObjectParameter("ClaveAnterior", typeof(string));
    
            var claveNuevaParameter = claveNueva != null ?
                new ObjectParameter("ClaveNueva", claveNueva) :
                new ObjectParameter("ClaveNueva", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarClave", idUsuarioParameter, claveAnteriorParameter, claveNuevaParameter);
        }
    
        public virtual ObjectResult<ConsultarCategoria_Result> ConsultarCategoria(Nullable<long> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCategoria_Result>("ConsultarCategoria", idCategoriaParameter);
        }
    
        public virtual ObjectResult<ConsultarCategorias_Result> ConsultarCategorias(Nullable<bool> mostrarTodos)
        {
            var mostrarTodosParameter = mostrarTodos.HasValue ?
                new ObjectParameter("MostrarTodos", mostrarTodos) :
                new ObjectParameter("MostrarTodos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCategorias_Result>("ConsultarCategorias", mostrarTodosParameter);
        }
    
        public virtual ObjectResult<ConsultarFavoritos_Result> ConsultarFavoritos(Nullable<long> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFavoritos_Result>("ConsultarFavoritos", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ConsultarProducto_Result> ConsultarProducto(Nullable<long> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProducto_Result>("ConsultarProducto", idProductoParameter);
        }
    
        public virtual ObjectResult<ConsultarProductos_Result> ConsultarProductos(Nullable<bool> mostrarTodos)
        {
            var mostrarTodosParameter = mostrarTodos.HasValue ?
                new ObjectParameter("MostrarTodos", mostrarTodos) :
                new ObjectParameter("MostrarTodos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductos_Result>("ConsultarProductos", mostrarTodosParameter);
        }
    
        public virtual ObjectResult<ConsultarRol_Result> ConsultarRol(Nullable<long> idRol)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarRol_Result>("ConsultarRol", idRolParameter);
        }
    
        public virtual ObjectResult<ConsultarRoles_Result> ConsultarRoles(Nullable<bool> mostrarTodos)
        {
            var mostrarTodosParameter = mostrarTodos.HasValue ?
                new ObjectParameter("MostrarTodos", mostrarTodos) :
                new ObjectParameter("MostrarTodos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarRoles_Result>("ConsultarRoles", mostrarTodosParameter);
        }
    
        public virtual ObjectResult<ConsultarUbicaciones_Result> ConsultarUbicaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUbicaciones_Result>("ConsultarUbicaciones");
        }
    
        public virtual ObjectResult<ConsultarUsuario_Result> ConsultarUsuario(Nullable<long> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuario_Result>("ConsultarUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuarios_Result> ConsultarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuarios_Result>("ConsultarUsuarios");
        }
    
        public virtual int CrearCategoria(string nombreCategoria, string descripcionCategoria, string iconoCategoria)
        {
            var nombreCategoriaParameter = nombreCategoria != null ?
                new ObjectParameter("NombreCategoria", nombreCategoria) :
                new ObjectParameter("NombreCategoria", typeof(string));
    
            var descripcionCategoriaParameter = descripcionCategoria != null ?
                new ObjectParameter("DescripcionCategoria", descripcionCategoria) :
                new ObjectParameter("DescripcionCategoria", typeof(string));
    
            var iconoCategoriaParameter = iconoCategoria != null ?
                new ObjectParameter("IconoCategoria", iconoCategoria) :
                new ObjectParameter("IconoCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearCategoria", nombreCategoriaParameter, descripcionCategoriaParameter, iconoCategoriaParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> CrearRol(string nombreRol, string descripcionRol)
        {
            var nombreRolParameter = nombreRol != null ?
                new ObjectParameter("NombreRol", nombreRol) :
                new ObjectParameter("NombreRol", typeof(string));
    
            var descripcionRolParameter = descripcionRol != null ?
                new ObjectParameter("DescripcionRol", descripcionRol) :
                new ObjectParameter("DescripcionRol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("CrearRol", nombreRolParameter, descripcionRolParameter);
        }
    
        public virtual int EliminarCategoria(Nullable<long> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCategoria", idCategoriaParameter);
        }
    
        public virtual int EliminarFavorito(Nullable<long> idUsuario, Nullable<long> idProducto)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarFavorito", idUsuarioParameter, idProductoParameter);
        }
    
        public virtual int EliminarProducto(Nullable<long> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProducto", idProductoParameter);
        }
    
        public virtual int EliminarRol(Nullable<long> idRol)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarRol", idRolParameter);
        }
    
        public virtual int EliminarUsuario(Nullable<long> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<GenerarClave_Result> GenerarClave(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerarClave_Result>("GenerarClave", correoParameter);
        }
    
        public virtual ObjectResult<IniciarSesionUsuario_Result> IniciarSesionUsuario(string correo, string clave)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesionUsuario_Result>("IniciarSesionUsuario", correoParameter, claveParameter);
        }
    
        public virtual int RegistrarError(Nullable<int> codigoError, string mensajeError)
        {
            var codigoErrorParameter = codigoError.HasValue ?
                new ObjectParameter("CodigoError", codigoError) :
                new ObjectParameter("CodigoError", typeof(int));
    
            var mensajeErrorParameter = mensajeError != null ?
                new ObjectParameter("MensajeError", mensajeError) :
                new ObjectParameter("MensajeError", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarError", codigoErrorParameter, mensajeErrorParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> RegistrarProducto(Nullable<long> idCategoria, string nombreProducto, Nullable<decimal> precioUnitario, string color, Nullable<int> stock)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(long));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var precioUnitarioParameter = precioUnitario.HasValue ?
                new ObjectParameter("PrecioUnitario", precioUnitario) :
                new ObjectParameter("PrecioUnitario", typeof(decimal));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("RegistrarProducto", idCategoriaParameter, nombreProductoParameter, precioUnitarioParameter, colorParameter, stockParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> RegistrarUsuario(Nullable<long> idUbicacion, string nombreUsuario, string apellidoUsuario, Nullable<int> edad, string correo, string clave)
        {
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(long));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("NombreUsuario", nombreUsuario) :
                new ObjectParameter("NombreUsuario", typeof(string));
    
            var apellidoUsuarioParameter = apellidoUsuario != null ?
                new ObjectParameter("ApellidoUsuario", apellidoUsuario) :
                new ObjectParameter("ApellidoUsuario", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("RegistrarUsuario", idUbicacionParameter, nombreUsuarioParameter, apellidoUsuarioParameter, edadParameter, correoParameter, claveParameter);
        }
    
        public virtual ObjectResult<VisualizarPerfil_Result> VisualizarPerfil(Nullable<long> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VisualizarPerfil_Result>("VisualizarPerfil", idUsuarioParameter);
        }
    }
}
